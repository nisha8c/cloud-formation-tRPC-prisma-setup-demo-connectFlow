AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS Cluster and API Deployment for ConnectFlow (multi-environment ready)"

Parameters:
  EcrImage:
    Type: String
    Description: "Docker image URI (e.g., 123456789012.dkr.ecr.eu-north-1.amazonaws.com/connect-flow-api:latest)"

  DatabaseUrl:
    Type: String
    Description: "RDS PostgreSQL connection URL"

  RedisHost:
    Type: String
    Description: "Redis endpoint"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "VPC ID where ECS tasks will run"

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Subnets for ECS tasks (should be private subnets or public with AssignPublicIp ENABLED)"

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: "Security Group ID that allows inbound access on port 4000"

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: connectflow-cluster

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSApiTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: connectflow-api
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: connectflow-api
          Image: !Ref EcrImage
          PortMappings:
            - ContainerPort: 4000
          Environment:
            - Name: DATABASE_URL
              Value: !Ref DatabaseUrl
            - Name: REDIS_HOST
              Value: !Ref RedisHost
            - Name: NODE_ENV
              Value: production
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/connectflow-api
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ECSApiService:
    Type: AWS::ECS::Service
    DependsOn: ECSApiTaskDefinition
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSApiTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref SecurityGroupId

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/connectflow-api
      RetentionInDays: 7

Outputs:
  ECSClusterName:
    Description: "ECS Cluster Name"
    Value: !Ref ECSCluster

  ECSServiceName:
    Description: "ECS Service Name"
    Value: !Ref ECSApiService

  LogGroupName:
    Description: "CloudWatch Logs Group"
    Value: !Ref ECSLogGroup
